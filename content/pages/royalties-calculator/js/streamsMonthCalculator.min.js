let streamingPayRatesData;const calculationTypeSelect=document.getElementById("calculation-type"),calculatorElement=document.getElementById("calculator"),decimalPrecision=2,earningsAmountSpan=document.getElementById("earnings-amount"),earningsResultsDiv=document.getElementById("earnings-results"),hiddenClass="hidden",jsonPath="/royalties-calculator/data/streaming_pay_rate.json",questionDiv=document.getElementById("question"),resultsDiv=document.getElementById("results"),targetAmountElement=document.getElementById("target-amount");async function fetchStreamingPayRates(){try{const e=await fetch(jsonPath);if(!e.ok)throw new Error("Network response was not ok");streamingPayRatesData=await e.json(),createElementForStore(streamingPayRatesData),initializeCalculator(),toggleCalculatorMode()}catch(e){console.error("There was a problem with the fetch operation:",e)}}function createElementForStore(e){resultsDiv.innerHTML="",resultsDiv.className="results-grid",e.forEach((e=>{const t=normalizeStoreName(e.Store),a="Meta"===e.Store?"Instagram & Facebook":e.Store,n=`<div class="store-box">\n      <img src="img/streaming_logos/${t}.png" alt="" class="store-logo${"tidal"===e.Store.toLowerCase()?" invertible-image":""}">\n      <div class="streams-needed" tabindex="0" id="${t}-streams-label">0</div>\n      <input class="streams-for-store ${hiddenClass}" id="${t}-streams-needed" type="number" inputmode="numeric" value="0" aria-label="${a} streams">\n      <div class="store-name" aria-hidden="true">${a}</div>\n     </div>`;resultsDiv.insertAdjacentHTML("beforeend",n);const s=resultsDiv.lastElementChild,r=s.querySelector(`#${t}-streams-needed`);s.addEventListener("click",(()=>{r.focus(),r.select()})),applyValidationToInput(r),r.addEventListener("input",(()=>{applyValidationToInput(r)}))}))}function applyValidationToInput(e){const t=isValidNumber(e.value);e.style.borderBottom=t?"2px solid var(--primary-color)":"2px solid red",e.setAttribute("aria-invalid",!t)}function isValidNumber(e){return/^-?\d*\.?\d+(e\d+)?$/.test(e)&&parseFloat(e)>=0}function initializeCalculator(){const e=getUserInputs();e&&updateResults(streamingPayRatesData,e)}function getUserInputs(){const e=calculationTypeSelect.value,t=parseFloat(targetAmountElement.value);return isNaN(t)||t<0?null:{calculationType:e,targetAmount:t}}function updateResults(e,{calculationType:t,targetAmount:a}){e.forEach((e=>{const n=normalizeStoreName(e.Store),s=Math.ceil(a/e[t]).toLocaleString();document.querySelector(`#${n}-streams-needed`).previousElementSibling.textContent=s}))}function normalizeStoreName(e){return e.toLowerCase().replace(/\s+/g,"_")}function toggleCalculatorMode(){const e="CalculateEarnings"===document.querySelector('input[name="mode"]:checked').value;questionDiv.classList.toggle(hiddenClass,e),earningsResultsDiv.classList.toggle(hiddenClass,!e),document.querySelectorAll(".streams-needed").forEach((t=>t.classList.toggle(hiddenClass,e))),document.querySelectorAll(".streams-for-store").forEach((t=>{t.classList.toggle(hiddenClass,!e);const a=t.closest(".store-box");a&&(e?(a.classList.add("clickable"),a.setAttribute("aria-disabled","false")):(a.classList.remove("clickable"),a.setAttribute("aria-disabled","true")))})),document.querySelectorAll(".store-name").forEach((t=>{t.setAttribute("aria-hidden",e)}))}function updateEarningsResults(){if("CalculateEarnings"===document.querySelector('input[name="mode"]:checked').value){const e=calculateEarnings().toFixed(2),t=parseFloat(e).toLocaleString();earningsAmountSpan.textContent=`$${t}`}}function calculateEarnings(){const e=calculationTypeSelect.value;return Array.from(document.querySelectorAll(".streams-for-store")).reduce(((t,a)=>{const n=parseFloat(a.value);if(!isNaN(n)&&n>0){const s=a.id.split("-")[0];return t+n*streamingPayRatesData.find((e=>normalizeStoreName(e.Store)===s))[e]}return t}),0)}function reorderServices(){const e=calculationTypeSelect.value,t=[...streamingPayRatesData].sort(((t,a)=>a[e]-t[e])),a=document.createDocumentFragment();t.forEach((e=>{const t=`${normalizeStoreName(e.Store)}-streams-needed`,n=document.getElementById(t).closest(".store-box");n&&a.appendChild(n)})),resultsDiv.appendChild(a)}targetAmountElement.addEventListener("input",(()=>{applyValidationToInput(targetAmountElement)})),targetAmountElement.addEventListener("click",(()=>{targetAmountElement.focus(),targetAmountElement.select()})),calculatorElement.addEventListener("input",(()=>{streamingPayRatesData&&(initializeCalculator(),updateEarningsResults())})),document.querySelectorAll('input[name="mode"]').forEach((e=>{e.addEventListener("change",(()=>{toggleCalculatorMode(),updateEarningsResults()}))})),calculationTypeSelect.addEventListener("change",(()=>{reorderServices()})),fetchStreamingPayRates();
